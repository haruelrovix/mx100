swagger: "2.0"
info:
  version: "0.0.1"
  title: MX100 API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /api
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /login:
    x-swagger-router-controller: accounts
    post:
      operationId: login
      description: Gets the token by login
      parameters:
        - name: account
          description: Login properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Account"
      tags:
        - Accounts
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LoginResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /jobpoststatus:
    x-swagger-router-controller: JobPostStatus
    get:
      operationId: getJobPostStatus
      description: Returns a list of job post status
      parameters:
        - name: Authorization
          in: header
          description: JWT Authorization Header
          required: true
          type: string
      tags:
        - Job Post Status
      security:
        - Bearer: []
      x-security-scopes:
        - Administrator
        - Employer
        - Freelancer
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetJobPostStatusResponse"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /proposalstatus:
    x-swagger-router-controller: ProposalStatus
    get:
      operationId: getProposalStatus
      description: Returns a list of proposal status
      parameters:
        - name: Authorization
          in: header
          description: JWT Authorization Header
          required: true
          type: string
      tags:
        - Proposal Status
      security:
        - Bearer: []
      x-security-scopes:
        - Administrator
        - Employer
        - Freelancer
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetProposalStatusResponse"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /proposal:
    x-swagger-router-controller: proposal
    post:
      operationId: submit
      description: Submits proposal to any published job
      parameters:
        - name: proposal
          description: Proposal properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Proposal"
        - name: jobId
          description: Published job with given Id to be submitted
          in: query
          required: true
          type: integer
        - name: Authorization
          description: JWT Authorization Header
          in: header
          required: true
          type: string
      tags:
        - Proposal
      security:
        - Bearer: []
      x-security-scopes:
        - Freelancer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PostResponse"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/PostResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /freelancerrank:
    x-swagger-router-controller: FreelancerRank
    get:
      operationId: getFreelancerRank
      description: Returns a list of Freelancer and its Rank
      parameters:
        - name: Authorization
          in: header
          description: JWT Authorization Header
          required: true
          type: string
      tags:
        - Freelancer Rank
      security:
        - Bearer: []
      x-security-scopes:
        - Administrator
        - Employer
        - Freelancer
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetFreelancerRankResponse"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /jobs:
    x-swagger-router-controller: jobs
    get:
      operationId: getAll
      description: Returns a list of jobs
      parameters:
        - name: Authorization
          in: header
          description: JWT Authorization Header
          required: true
          type: string
      tags:
        - Jobs
      security:
        - Bearer: []
      x-security-scopes:
        - Administrator
        - Employer
        - Freelancer
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetJobsListResponse"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: save
      description: Adds a new job to the list
      # job info to be stored
      parameters:
        - name: job
          description: Job properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Job"
        - name: Authorization
          description: JWT Authorization Header
          in: header
          required: true
          type: string
      tags:
        - Jobs
      security:
        - Bearer: []
      x-security-scopes:
        - Administrator
        - Employer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PostResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /jobs/{id}:
    x-swagger-router-controller: jobs
    put:
      operationId: edit
      description: Updates job for given id
      # job info to be updated
      parameters:
        - name: job
          description: Job properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Job"
        - name: id
          description: Job with given id to be updated
          in: path
          required: true
          type: integer
        - name: Authorization
          description: JWT Authorization Header
          in: header
          required: true
          type: string
      tags:
        - Jobs
      security:
        - Bearer: []
      x-security-scopes:
        - Administrator
        - Employer
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/PostResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: get
      description: Returns a job
      parameters:
        - name: id
          description: Job with given id to be returned
          in: path
          required: true
          type: integer
        - name: Authorization
          in: header
          description: JWT Authorization Header
          required: true
          type: string
      tags:
        - Jobs
      security:
        - Bearer: []
      x-security-scopes:
        - Administrator
        - Employer
        - Freelancer
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetJobResponse"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/PostResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Account:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
    required:
      - email
      - password
  Job:
    type: object
    properties:
      title:
        type: string
        description: job title
      description:
        type: string
        description: job description
      status:
        type: integer
        description: job post status id
    required:
      - title
      - status
  Proposal:
    type: object
    properties:
      message:
        type: string
        description: message to be submitted inside proposal
  PostResponse:
    type: object
    properties:
      id:
        type: integer
        description: returns last inserted / updated id if successful
      message:
        type: string
        description: a short comment
    required:
      - id
      - message
  LoginResponse:
    type: object
    properties:
      token:
        type: string
        description: a generated JWT token
    required:
      - token
  GetFreelancerRankResponse:
    required:
      - freelancerRank
    properties:
      # The array of freelancer rank
      freelancerRank:
        type: array
        items: 
          type: object
          properties:
            email:
              type: string
            rank:
              type: string
            proposalSpace:
              type: integer
  GetJobsListResponse:
    required:
      - jobs
    properties:
      # The array of jobs
      jobs:
        type: array
        items: 
          type: object
          properties:
            id:
              type: integer
            title:
              type: string
            description:
              type: string
            status:
              type: string
  GetJobPostStatusResponse:
    required:
      - jobPostStatus
    properties:
      # The array of job post status
      jobPostStatus:
        type: array
        items: 
          type: object
          properties:
            id:
              type: integer
            description:
              type: string
  GetProposalStatusResponse:
    required:
      - proposalStatus
    properties:
      # The array of proposal status
      proposalStatus:
        type: array
        items: 
          type: object
          properties:
            id:
              type: integer
            status:
              type: string
  GetJobResponse:
    required:
      - job
    properties:
      job:
        type: object
        properties:
          id:
            type: integer
          title:
            type: string
          description:
            type: string
          status:
            type: string
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description:
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.

     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.
